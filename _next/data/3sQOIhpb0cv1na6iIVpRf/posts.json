{"pageProps":{"articles":[{"title":"Copy Issue Labels From Another GitHub Repository","layout":"posts","slug":"copy-issue-labels-from-another-github-repository","draft":false,"frontMatter":{"title":"Copy Issue Labels From Another GitHub Repository","publishedDate":"2023-03-29T18:31:00Z","tags":["GitHub"],"description":"","disableComments":false},"rawContent":"\nIf you manage multiple projects across different GitHub Organizations, you may have faced a common scenario: the need to copy [GitHub issue labels](https://docs.github.com/en/issues/using-labels-and-milestones-to-track-work/managing-labels) from one repository to another. It used to be a manual process before, but luckily we can now use [GitHub's official CLI](https://cli.github.com/).\n\n## Why copy issue labels?\n\nHere are some common scenarios when you might need to copy issue labels between projects:\n\n- **Standardization**: If your Organization requires a standard list of issue labels for all projects, copying issue labels from an existing project with the required labels ensures consistency.\n- **Project Migration**: When a project is moved from one Organization to another, you might want to retain the issue labels to maintain the same workflow and issue categorization.\n- **Team Collaboration**: If multiple teams within an Organization work on similar projects, having a unified set of issue labels for better collaboration and understanding across teams is helpful.\n\n## Using the GitHub CLI\n\nBefore we dive into the process, make sure you have the GitHub CLI installed on your system. If you haven't installed it yet, head to https://cli.github.com/ and follow the installation instructions for your operating system.\n\nYou can authenticate with the CLI using:\n\n```bash\ngh auth login\n```\n\nOnce you have the GitHub CLI installed and configured, you can copy issue labels between repositories by executing the following command:\n\n```bash\ngh label clone owner-name/source-repo-name --repo owner-name/destination-repo-name --force\n```\n\nHere's a breakdown of the command:\n\n- `gh`: The GitHub CLI command.\n- `label`: The command group for working with issue labels.\n- `clone`: The command to copy labels from one repository to another.\n- `owner-name/source-repo-name`: The source repository from which you want to copy the issue labels.\n- `--repo`: The flag to specify the destination repository to which the issue labels will be copied.\n- `owner-name/destination-repo-name`: The destination repository to which the issue labels will be copied.\n- `--force`: Optional flag to overwrite existing labels in the destination repository.\n\nDocumentation for the command can be found at https://cli.github.com/manual/gh_label_clone.\n\n> **NOTE**: Please note that you must have the necessary permissions (write access) for the destination repositories.\n\nOnce the command executes successfully, all issue labels from `owner-name/source-repo-name` will be copied to `owner-name/destination-repo-name`, ensuring that the latter now follows the Organization's standard list of issue labels.\n\n## Creating default labels for your Organization\n\nAs an Organization owner, you can also create default labels that will be automatically included in every new repository in your Organization. This is a convenient way to standardize issue labels across all projects within your Organization.\n\nPlease refer to the GitHub documentation on [Managing Default Labels for Repositories in Your Organization](https://docs.github.com/en/organizations/managing-organization-settings/managing-default-labels-for-repositories-in-your-organization) for detailed instructions and screenshots.\n\n> **NOTE**: Adding, editing, or deleting a default label does not affect existing repositories. Default labels only apply to new repositories created after the changes.\n","excerpt":"\nIf you manage multiple projects across different GitHub Organizations, you may have faced a common scenario: the need to copy [GitHub issue labels](https://docs.github.com/en/issues/using-labels-and-milestones-to-track-work/managing-labels) from one repository to another. It used to be a manual pro...","serializedContent":{"compiledSource":"var c=Object.defineProperty,m=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var i=Object.getOwnPropertySymbols;var l=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;var r=(e,a,o)=>a in e?c(e,a,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[a]=o,n=(e,a)=>{for(var o in a||(a={}))l.call(a,o)&&r(e,o,a[o]);if(i)for(var o of i(a))s.call(a,o)&&r(e,o,a[o]);return e},p=(e,a)=>m(e,h(a));var u=(e,a)=>{var o={};for(var t in e)l.call(e,t)&&a.indexOf(t)<0&&(o[t]=e[t]);if(e!=null&&i)for(var t of i(e))a.indexOf(t)<0&&s.call(e,t)&&(o[t]=e[t]);return o};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(o){var t=o,{components:e}=t,a=u(t,[\"components\"]);return mdx(MDXLayout,p(n(n({},layoutProps),a),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"If you manage multiple projects across different GitHub Organizations, you may have faced a common scenario: the need to copy \",mdx(\"a\",n({parentName:\"p\"},{href:\"https://docs.github.com/en/issues/using-labels-and-milestones-to-track-work/managing-labels\"}),\"GitHub issue labels\"),\" from one repository to another. It used to be a manual process before, but luckily we can now use \",mdx(\"a\",n({parentName:\"p\"},{href:\"https://cli.github.com/\"}),\"GitHub's official CLI\"),\".\"),mdx(\"h2\",n({},{id:\"why-copy-issue-labels\"}),\"Why copy issue labels?\"),mdx(\"p\",null,\"Here are some common scenarios when you might need to copy issue labels between projects:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"Standardization\"),\": If your Organization requires a standard list of issue labels for all projects, copying issue labels from an existing project with the required labels ensures consistency.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"Project Migration\"),\": When a project is moved from one Organization to another, you might want to retain the issue labels to maintain the same workflow and issue categorization.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"Team Collaboration\"),\": If multiple teams within an Organization work on similar projects, having a unified set of issue labels for better collaboration and understanding across teams is helpful.\")),mdx(\"h2\",n({},{id:\"using-the-github-cli\"}),\"Using the GitHub CLI\"),mdx(\"p\",null,\"Before we dive into the process, make sure you have the GitHub CLI installed on your system. If you haven't installed it yet, head to \",mdx(\"a\",n({parentName:\"p\"},{href:\"https://cli.github.com/\"}),\"https://cli.github.com/\"),\" and follow the installation instructions for your operating system.\"),mdx(\"p\",null,\"You can authenticate with the CLI using:\"),mdx(\"pre\",null,mdx(\"code\",n({parentName:\"pre\"},{className:\"language-bash\"}),`gh auth login\n`)),mdx(\"p\",null,\"Once you have the GitHub CLI installed and configured, you can copy issue labels between repositories by executing the following command:\"),mdx(\"pre\",null,mdx(\"code\",n({parentName:\"pre\"},{className:\"language-bash\"}),`gh label clone owner-name/source-repo-name --repo owner-name/destination-repo-name --force\n`)),mdx(\"p\",null,\"Here's a breakdown of the command:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"gh\"),\": The GitHub CLI command.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"label\"),\": The command group for working with issue labels.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"clone\"),\": The command to copy labels from one repository to another.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"owner-name/source-repo-name\"),\": The source repository from which you want to copy the issue labels.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"--repo\"),\": The flag to specify the destination repository to which the issue labels will be copied.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"owner-name/destination-repo-name\"),\": The destination repository to which the issue labels will be copied.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"--force\"),\": Optional flag to overwrite existing labels in the destination repository.\")),mdx(\"p\",null,\"Documentation for the command can be found at \",mdx(\"a\",n({parentName:\"p\"},{href:\"https://cli.github.com/manual/gh_label_clone\"}),\"https://cli.github.com/manual/gh_label_clone\"),\".\"),mdx(\"blockquote\",null,mdx(\"p\",{parentName:\"blockquote\"},mdx(\"strong\",{parentName:\"p\"},\"NOTE\"),\": Please note that you must have the necessary permissions (write access) for the destination repositories.\")),mdx(\"p\",null,\"Once the command executes successfully, all issue labels from \",mdx(\"inlineCode\",{parentName:\"p\"},\"owner-name/source-repo-name\"),\" will be copied to \",mdx(\"inlineCode\",{parentName:\"p\"},\"owner-name/destination-repo-name\"),\", ensuring that the latter now follows the Organization's standard list of issue labels.\"),mdx(\"h2\",n({},{id:\"creating-default-labels-for-your-organization\"}),\"Creating default labels for your Organization\"),mdx(\"p\",null,\"As an Organization owner, you can also create default labels that will be automatically included in every new repository in your Organization. This is a convenient way to standardize issue labels across all projects within your Organization.\"),mdx(\"p\",null,\"Please refer to the GitHub documentation on \",mdx(\"a\",n({parentName:\"p\"},{href:\"https://docs.github.com/en/organizations/managing-organization-settings/managing-default-labels-for-repositories-in-your-organization\"}),\"Managing Default Labels for Repositories in Your Organization\"),\" for detailed instructions and screenshots.\"),mdx(\"blockquote\",null,mdx(\"p\",{parentName:\"blockquote\"},mdx(\"strong\",{parentName:\"p\"},\"NOTE\"),\": Adding, editing, or deleting a default label does not affect existing repositories. Default labels only apply to new repositories created after the changes.\")))}MDXContent.isMDXComponent=!0;\n","scope":{}}},{"title":"Gazi Fanart Using Figma","layout":"posts","slug":"gazi-fanart-using-figma","draft":false,"frontMatter":{"title":"Gazi Fanart Using Figma","publishedDate":"2022-11-23T17:16:48Z","tags":["Art","Fanart","The Wandering Inn","Vector"],"description":"","disableComments":false},"rawContent":"\n![Gazi Pathseeker](/img/posts/vector-art/gazi.svg)\n\nFeaturing [Gazi Pathseeker](https://thewanderinginn.fandom.com/wiki/Gazi_Pathseeker) from [The Wandering Inn](https://wanderinginn.com/).\n\nMade in [Figma](https://figma.com/). See interactive version at [The Wandering Inndex](https://inndex.omg.lol/gazi).\n","excerpt":"\n![Gazi Pathseeker](/img/posts/vector-art/gazi.svg)\n\nFeaturing [Gazi Pathseeker](https://thewanderinginn.fandom.com/wiki/Gazi_Pathseeker) from [The Wandering Inn](https://wanderinginn.com/).\n\nMade in [Figma](https://figma.com/). See interactive version at [The Wandering Inndex](https://inndex.omg.lo...","serializedContent":{"compiledSource":"var h=Object.defineProperty,c=Object.defineProperties;var d=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;var m=(e,a,n)=>a in e?h(e,a,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[a]=n,r=(e,a)=>{for(var n in a||(a={}))i.call(a,n)&&m(e,n,a[n]);if(p)for(var n of p(a))o.call(a,n)&&m(e,n,a[n]);return e},s=(e,a)=>c(e,d(a));var g=(e,a)=>{var n={};for(var t in e)i.call(e,t)&&a.indexOf(t)<0&&(n[t]=e[t]);if(e!=null&&p)for(var t of p(e))a.indexOf(t)<0&&o.call(e,t)&&(n[t]=e[t]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var t=n,{components:e}=t,a=g(t,[\"components\"]);return mdx(MDXLayout,s(r(r({},layoutProps),a),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,mdx(\"img\",r({parentName:\"p\"},{src:\"/img/posts/vector-art/gazi.svg\",alt:\"Gazi Pathseeker\"}))),mdx(\"p\",null,\"Featuring \",mdx(\"a\",r({parentName:\"p\"},{href:\"https://thewanderinginn.fandom.com/wiki/Gazi_Pathseeker\"}),\"Gazi Pathseeker\"),\" from \",mdx(\"a\",r({parentName:\"p\"},{href:\"https://wanderinginn.com/\"}),\"The Wandering Inn\"),\".\"),mdx(\"p\",null,\"Made in \",mdx(\"a\",r({parentName:\"p\"},{href:\"https://figma.com/\"}),\"Figma\"),\". See interactive version at \",mdx(\"a\",r({parentName:\"p\"},{href:\"https://inndex.omg.lol/gazi\"}),\"The Wandering Inndex\"),\".\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}},{"title":"Modified AI-generated Art of Rags","layout":"posts","slug":"modified-ai-generated-art-of-rags","draft":false,"frontMatter":{"title":"Modified AI-generated Art of Rags","publishedDate":"2022-11-05T15:46:18Z","tags":["Art","Fanart","Stable Diffusion","The Wandering Inn"],"description":"","disableComments":false},"rawContent":"\nFanart of [Rags](https://thewanderinginn.fandom.com/wiki/Rags) from [The Wandering Inn](https://wanderinginn.com/).\n\nOriginally created using [Stable Diffusion](https://stability.ai/), and then edited on [Krita](https://krita.org/en/) and [Rebelle 5 Pro](https://www.escapemotions.com/products/rebelle/about).\n\n## Original Image by Stable Diffusion (txt2img)\n\n![Rags (Original)](/img/posts/ai-art/rags-original.png)\n\nIn case anyone wants to recreate it, the original prompt was `little goblin child drawing (sketch) (crosshatching), fantasy western ((cute)) beautiful puppy eyes crying`.\n\n## Modified Image\n\n![Rags (Uncolored)](/img/posts/ai-art/rags-without-color.jpg)\n![Rags (Colored)](/img/posts/ai-art/rags-with-color.jpg)\n","excerpt":"\nFanart of [Rags](https://thewanderinginn.fandom.com/wiki/Rags) from [The Wandering Inn](https://wanderinginn.com/).\n\nOriginally created using [Stable Diffusion](https://stability.ai/), and then edited on [Krita](https://krita.org/en/) and [Rebelle 5 Pro](https://www.escapemotions.com/products/rebel...","serializedContent":{"compiledSource":"var l=Object.defineProperty,c=Object.defineProperties;var d=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var s=(a,e,t)=>e in a?l(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,i=(a,e)=>{for(var t in e||(e={}))o.call(e,t)&&s(a,t,e[t]);if(r)for(var t of r(e))p.call(e,t)&&s(a,t,e[t]);return a},g=(a,e)=>c(a,d(e));var m=(a,e)=>{var t={};for(var n in a)o.call(a,n)&&e.indexOf(n)<0&&(t[n]=a[n]);if(a!=null&&r)for(var n of r(a))e.indexOf(n)<0&&p.call(a,n)&&(t[n]=a[n]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var n=t,{components:a}=n,e=m(n,[\"components\"]);return mdx(MDXLayout,g(i(i({},layoutProps),e),{components:a,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"Fanart of \",mdx(\"a\",i({parentName:\"p\"},{href:\"https://thewanderinginn.fandom.com/wiki/Rags\"}),\"Rags\"),\" from \",mdx(\"a\",i({parentName:\"p\"},{href:\"https://wanderinginn.com/\"}),\"The Wandering Inn\"),\".\"),mdx(\"p\",null,\"Originally created using \",mdx(\"a\",i({parentName:\"p\"},{href:\"https://stability.ai/\"}),\"Stable Diffusion\"),\", and then edited on \",mdx(\"a\",i({parentName:\"p\"},{href:\"https://krita.org/en/\"}),\"Krita\"),\" and \",mdx(\"a\",i({parentName:\"p\"},{href:\"https://www.escapemotions.com/products/rebelle/about\"}),\"Rebelle 5 Pro\"),\".\"),mdx(\"h2\",i({},{id:\"original-image-by-stable-diffusion-txt2img\"}),\"Original Image by Stable Diffusion (txt2img)\"),mdx(\"p\",null,mdx(\"img\",i({parentName:\"p\"},{src:\"/img/posts/ai-art/rags-original.png\",alt:\"Rags (Original)\"}))),mdx(\"p\",null,\"In case anyone wants to recreate it, the original prompt was \",mdx(\"inlineCode\",{parentName:\"p\"},\"little goblin child drawing (sketch) (crosshatching), fantasy western ((cute)) beautiful puppy eyes crying\"),\".\"),mdx(\"h2\",i({},{id:\"modified-image\"}),\"Modified Image\"),mdx(\"p\",null,mdx(\"img\",i({parentName:\"p\"},{src:\"/img/posts/ai-art/rags-without-color.jpg\",alt:\"Rags (Uncolored)\"})),`\n`,mdx(\"img\",i({parentName:\"p\"},{src:\"/img/posts/ai-art/rags-with-color.jpg\",alt:\"Rags (Colored)\"}))))}MDXContent.isMDXComponent=!0;\n","scope":{}}},{"title":"Inntober 2021 #06: \"Spirit\" - A Bartender Running Low On Spirits","layout":"posts","slug":"inntober-2021-06-spirit","draft":false,"frontMatter":{"title":"Inntober 2021 #06: \"Spirit\" - A Bartender Running Low On Spirits","publishedDate":"2021-10-08T02:30:25Z","tags":["Art","Inntober","Inktober","Fanart","The Wandering Inn"],"description":"","disableComments":false},"rawContent":"\n2021 was a busy year for me and this is the only thing I finished for [Inktober](https://inktober.com/rules).\n\n![Sad Gnolls Club](/img/posts/inntober-2021-06-spirit/sad-gnolls-club-04-with-vest.png)\n\nFeaturing [Rufelt](https://thewanderinginn.fandom.com/wiki/Rufelt_Owelt) and [Belavierr](https://thewanderinginn.fandom.com/wiki/Belavierr) from [The Wandering Inn](https://wanderinginn.com/).\n\nMade in [FireAlpaca](https://firealpaca.com/).\n","excerpt":"\n2021 was a busy year for me and this is the only thing I finished for [Inktober](https://inktober.com/rules).\n\n![Sad Gnolls Club](/img/posts/inntober-2021-06-spirit/sad-gnolls-club-04-with-vest.png)\n\nFeaturing [Rufelt](https://thewanderinginn.fandom.com/wiki/Rufelt_Owelt) and [Belavierr](https://th...","serializedContent":{"compiledSource":"var l=Object.defineProperty,f=Object.defineProperties;var u=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;var s=(e,a,n)=>a in e?l(e,a,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[a]=n,r=(e,a)=>{for(var n in a||(a={}))i.call(a,n)&&s(e,n,a[n]);if(p)for(var n of p(a))o.call(a,n)&&s(e,n,a[n]);return e},m=(e,a)=>f(e,u(a));var h=(e,a)=>{var n={};for(var t in e)i.call(e,t)&&a.indexOf(t)<0&&(n[t]=e[t]);if(e!=null&&p)for(var t of p(e))a.indexOf(t)<0&&o.call(e,t)&&(n[t]=e[t]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var t=n,{components:e}=t,a=h(t,[\"components\"]);return mdx(MDXLayout,m(r(r({},layoutProps),a),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"2021 was a busy year for me and this is the only thing I finished for \",mdx(\"a\",r({parentName:\"p\"},{href:\"https://inktober.com/rules\"}),\"Inktober\"),\".\"),mdx(\"p\",null,mdx(\"img\",r({parentName:\"p\"},{src:\"/img/posts/inntober-2021-06-spirit/sad-gnolls-club-04-with-vest.png\",alt:\"Sad Gnolls Club\"}))),mdx(\"p\",null,\"Featuring \",mdx(\"a\",r({parentName:\"p\"},{href:\"https://thewanderinginn.fandom.com/wiki/Rufelt_Owelt\"}),\"Rufelt\"),\" and \",mdx(\"a\",r({parentName:\"p\"},{href:\"https://thewanderinginn.fandom.com/wiki/Belavierr\"}),\"Belavierr\"),\" from \",mdx(\"a\",r({parentName:\"p\"},{href:\"https://wanderinginn.com/\"}),\"The Wandering Inn\"),\".\"),mdx(\"p\",null,\"Made in \",mdx(\"a\",r({parentName:\"p\"},{href:\"https://firealpaca.com/\"}),\"FireAlpaca\"),\".\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}},{"title":"Pirate Fanart","layout":"posts","slug":"pirate-fanart","draft":false,"frontMatter":{"title":"Pirate Fanart","publishedDate":"2021-10-08T02:30:25Z","tags":["Art","Fanart","The Wandering Inn"],"description":"","disableComments":false},"rawContent":"\nFanart of **Pirate**, a character of [Pirateaba](https://thewanderinginn.fandom.com/wiki/Pirateaba).\n\n## The Creation of Pirate\n\n[![The Creation of Pirate](/img/posts/pirate-fanart/the-creation-of-pirate-pirateaba-small.png)](/img/posts/pirate-fanart/the-creation-of-pirate-pirateaba.png)\n\nMade using [Easy Pose](https://store.steampowered.com/app/979710/Easy_Pose/) and [Adobe Photoshop](https://www.adobe.com/products/photoshop.html). Finished on **2021-09-21**.\n\n## Unlimited Bread: Words\n\n[![Unlimited Bread: Words](/img/posts/pirate-fanart/unlimited-bread-words-small.png)](/img/posts/pirate-fanart/unlimited-bread-words.png)\n\nMade using [Easy Pose](https://store.steampowered.com/app/979710/Easy_Pose/) and [Adobe Photoshop](https://www.adobe.com/products/photoshop.html). Finished on **2021-10-05**.\n","excerpt":"\nFanart of **Pirate**, a character of [Pirateaba](https://thewanderinginn.fandom.com/wiki/Pirateaba).\n\n## The Creation of Pirate\n\n[![The Creation of Pirate](/img/posts/pirate-fanart/the-creation-of-pirate-pirateaba-small.png)](/img/posts/pirate-fanart/the-creation-of-pirate-pirateaba.png)\n\nMade usin...","serializedContent":{"compiledSource":"var d=Object.defineProperty,g=Object.defineProperties;var f=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var n=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;var i=(a,e,t)=>e in a?d(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,r=(a,e)=>{for(var t in e||(e={}))n.call(e,t)&&i(a,t,e[t]);if(p)for(var t of p(e))s.call(e,t)&&i(a,t,e[t]);return a},m=(a,e)=>g(a,f(e));var h=(a,e)=>{var t={};for(var o in a)n.call(a,o)&&e.indexOf(o)<0&&(t[o]=a[o]);if(a!=null&&p)for(var o of p(a))e.indexOf(o)<0&&s.call(a,o)&&(t[o]=a[o]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var o=t,{components:a}=o,e=h(o,[\"components\"]);return mdx(MDXLayout,m(r(r({},layoutProps),e),{components:a,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"Fanart of \",mdx(\"strong\",{parentName:\"p\"},\"Pirate\"),\", a character of \",mdx(\"a\",r({parentName:\"p\"},{href:\"https://thewanderinginn.fandom.com/wiki/Pirateaba\"}),\"Pirateaba\"),\".\"),mdx(\"h2\",r({},{id:\"the-creation-of-pirate\"}),\"The Creation of Pirate\"),mdx(\"p\",null,mdx(\"a\",r({parentName:\"p\"},{href:\"/img/posts/pirate-fanart/the-creation-of-pirate-pirateaba.png\"}),mdx(\"img\",r({parentName:\"a\"},{src:\"/img/posts/pirate-fanart/the-creation-of-pirate-pirateaba-small.png\",alt:\"The Creation of Pirate\"})))),mdx(\"p\",null,\"Made using \",mdx(\"a\",r({parentName:\"p\"},{href:\"https://store.steampowered.com/app/979710/Easy_Pose/\"}),\"Easy Pose\"),\" and \",mdx(\"a\",r({parentName:\"p\"},{href:\"https://www.adobe.com/products/photoshop.html\"}),\"Adobe Photoshop\"),\". Finished on \",mdx(\"strong\",{parentName:\"p\"},\"2021-09-21\"),\".\"),mdx(\"h2\",r({},{id:\"unlimited-bread-words\"}),\"Unlimited Bread: Words\"),mdx(\"p\",null,mdx(\"a\",r({parentName:\"p\"},{href:\"/img/posts/pirate-fanart/unlimited-bread-words.png\"}),mdx(\"img\",r({parentName:\"a\"},{src:\"/img/posts/pirate-fanart/unlimited-bread-words-small.png\",alt:\"Unlimited Bread: Words\"})))),mdx(\"p\",null,\"Made using \",mdx(\"a\",r({parentName:\"p\"},{href:\"https://store.steampowered.com/app/979710/Easy_Pose/\"}),\"Easy Pose\"),\" and \",mdx(\"a\",r({parentName:\"p\"},{href:\"https://www.adobe.com/products/photoshop.html\"}),\"Adobe Photoshop\"),\". Finished on \",mdx(\"strong\",{parentName:\"p\"},\"2021-10-05\"),\".\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}},{"title":"Create a Remote Web Development Environment Using Linode","layout":"posts","slug":"create-a-remote-web-development-environment-using-linode","draft":false,"frontMatter":{"title":"Create a Remote Web Development Environment Using Linode","publishedDate":"2021-04-09T19:37:00Z","tags":["Linode","Keybase"],"description":"","disableComments":false},"rawContent":"\nIn this guide, we will create our own remote web development environment using [Linode](https://www.linode.com/?r=b042b8d928111627044d292bdbca3691c536bf8d).\n\n## Pre-requisities\n\n- A terminal with Bash or something similar. For Windows, you can use [Windows Terminal](https://www.microsoft.com/en-us/p/windows-terminal/9n0dx20hk701) or [Git Bash](https://git-scm.com/downloads). You can check [my current settings for Windows Terminal](https://github.com/napjoseph/remote/blob/main/windows/terminal/settings.md).\n- Your local SSH key pair. See [GitHub's guide](https://docs.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent) for more details.\n- A [GitHub](https://github.com) account.\n- A [Keybase](https://keybase.io/) account for storing your GPG keys.\n- A [Linode account](https://www.linode.com/?r=b042b8d928111627044d292bdbca3691c536bf8d). You can go to their [docs](https://www.linode.com/docs/guides/getting-started/) to get a $100 promo code (or you can directly use [my referral code](https://www.linode.com/?r=b042b8d928111627044d292bdbca3691c536bf8d)).\n- [Visual Studio Code](https://code.visualstudio.com/).\n\n## Generate SSH Key for your local machine\n\nFollow [GitHub's guide](https://docs.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent) to generate your SSH key pair. For Windows users, you may need to check this [guide from Microsoft](https://docs.microsoft.com/en-us/windows-server/administration/openssh/openssh_keymanagement) to enable SSH in your machine.\n\nAfterwards, add the key to your GitHub and Linode account.\n\n## Generate SSH Key for your new Linode instance\n\nCreate a new SSH Key for your new Linode instance. Save this for now as we'll use this later.\n\n## Generate GPG Key\n\nFollow this [guide to generate a GPG key using Keybase](https://github.com/pstadler/keybase-gpg-github).\n\n> **NOTE**: For Windows, if you already installed the Keybase app, you should have the CLI app will be ready to use (no need to install via brew).\n\nAgain, you need to add this key to your GitHub account.\n\n## Creating your server instance using Linode's StackScripts\n\n- [ ] Open the [StackScripts](https://cloud.linode.com/stackscripts/account) page and click **Create StackScript**.\n- [ ] Copy the contents of [web.sh](https://github.com/napjoseph/remote/blob/main/linode/web.sh). This will only work on **Debian 10**.\n- [ ] Click **Deploy New Linode**.\n- [ ] Fill out the fields and then click **Create Linode**.\n- [ ] Wait for your instance to be provisioned.\n- [ ] If all goes well, the status will change to **Running** and you can then connect to your instance.\n\nThis should install the following on your instance:\n\n- [x] [zsh](https://www.zsh.org/), [oh-my-zsh](https://ohmyz.sh/), [powerlevel10k](https://github.com/romkatv/powerlevel10k), [zsh-autosuggestions](https://github.com/zsh-users/zsh-autosuggestions), and [zsh-syntax-highlighting](https://github.com/zsh-users/zsh-syntax-highlighting)\n- [x] [Keybase](https://keybase.io)\n- [x] [Go](https://golang.org/)\n- [x] [Node Version Manager](https://github.com/nvm-sh/nvm)\n- [x] [pyenv](https://github.com/pyenv/pyenv)\n- [x] [Docker](https://www.docker.com/)\n- [x] [byobu](https://byobu.org)\n- [x] [spacevim](https://spacevim.org)\n- [x] [bat](https://github.com/sharkdp/bat)\n- [x] [direnv](https://github.com/direnv/direnv)\n- [x] [stow](https://www.gnu.org/software/stow)\n- [x] [Homebrew](https://brew.sh)\n\n## Connecting via SSH\n\nStart the ssh-agent in the background:\n\n```shell note=for%20linux/osx:\n$ eval `ssh-agent -s`\n> Agent pid 59566\n```\n\n```powershell note=for%20windows:\nStart-Service ssh-agent\n```\n\nAdd your SSH private key to the ssh-agent. If you created your key with a different name, or if you are adding an existing key that has a different name, replace id_ed25519 in the command with the name of your private key file.\n\n```shell\nssh-add ~/.ssh/id_ed25519\n```\n\nThen connect via SSH:\n\n```shell\nssh <NON_ROOT_USERNAME>@<LINODE_IPV4_ADDRESS> -p <SSH_PORT>\n```\n\nAlternatively, you can create a config file to make it easier to connect to your remote host.\n\n```text filename=~/.ssh/config\nHost <ALIAS>\n  User <NON_ROOT_USERNAME>\n  HostName <LINODE_IPV4_ADDRESS>\n  Port <SSH_PORT>\n  IdentityFile <PRIVATE_KEY_FILE_LOCATION>\n```\n\n```shell\nssh <ALIAS>\n```\n\nCongratulations! You can now connect to your remote server instance.\n\n> **NOTE**: You can already connect via SSH even if the StackScript has not yet been completed. To check its status, you can check the logs using `cat /var/log/stackscript.log`.\n\n## Additional setup\n\nThe essentials are already installed in your instance. However, we need to configure a few applications we will use.\n\n### Configuring your zsh theme\n\n> **IMPORTANT**: You also need to install the [recommended fonts](https://github.com/romkatv/powerlevel10k#meslo-nerd-font-patched-for-powerlevel10k) for the theme to display properly.\n\n> **IMPORTANT**: If you are using Windows, you can use [Windows Terminal](https://microsoft.com/en-us/p/windows-terminal/9n0dx20hk701). You can check [my current settings for Windows Terminal](https://github.com/napjoseph/remote/blob/main/windows/terminal/settings.md).\n\nIf you enabled `UPGRADE_SHELL_EXPERIENCE`, [zsh](https://www.zsh.org/), [oh-my-zsh](https://ohmyz.sh/), and the [powerlevel10k zsh theme](https://github.com/romkatv/powerlevel10k) will be installed.\n\nOn your first login via SSH, it will ask you to configure your theme. To run the wizard again, you can run:\n\n```shell\np10k configure\n```\n\n### Fixing your SSH Private Key\n\nDue to StackScripts not yet having a multiple-line UDF, the line breaks for our private key was removed.\n\nUpdate the `.ssh/$HOSTNAME` with the correct version.\n\n### Configure Keybase\n\n```shell\n# login\nkeybase login\n\n# check if you have more than one key saved\nkeybase pgp export\n\n# if yes, specify the id in the commands below\n# keybase pgp export -q 31DBBB1F6949DA68 | gpg --import\n\n# import public key\nkeybase pgp export | gpg --import\n\n# import private key\nkeybase pgp export --secret | gpg --allow-secret-key-import --import\n\n# check imported key\ngpg --list-secret-keys --keyid-format LONG\n# /Users/pstadler/.gnupg/secring.gpg\n# ----------------------------------\n# pub   2048R/DEADBEEF 2012-08-16\n# uid                  Name (Comment) <email@host.tld>\n# sub   2048R/86D2FAC6 2012-08-16\n```\n\nNotice the hash `DEADBEEF`. We will use this in the next section.\n\n### Configure Git\n\n```shell\n# add your basic information\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your_name@example.com\"\n\n# sign all commits using your GPG key\ngit config --global user.signingkey DEADBEEF\ngit config --global commit.gpgsign true\n```\n\n## Repository\n\nYou can check the [`napjoseph/remote` repository](https://github.com/napjoseph/remote/) for the updated code.\n","excerpt":"\nIn this guide, we will create our own remote web development environment using [Linode](https://www.linode.com/?r=b042b8d928111627044d292bdbca3691c536bf8d).\n\n## Pre-requisities\n\n- A terminal with Bash or something similar. For Windows, you can use [Windows Terminal](https://www.microsoft.com/en-us/...","serializedContent":{"compiledSource":"var h=Object.defineProperty,u=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var r=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;var l=(t,a,i)=>a in t?h(t,a,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[a]=i,e=(t,a)=>{for(var i in a||(a={}))r.call(a,i)&&l(t,i,a[i]);if(o)for(var i of o(a))s.call(a,i)&&l(t,i,a[i]);return t},p=(t,a)=>u(t,m(a));var c=(t,a)=>{var i={};for(var n in t)r.call(t,n)&&a.indexOf(n)<0&&(i[n]=t[n]);if(t!=null&&o)for(var n of o(t))a.indexOf(n)<0&&s.call(t,n)&&(i[n]=t[n]);return i};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(i){var n=i,{components:t}=n,a=c(n,[\"components\"]);return mdx(MDXLayout,p(e(e({},layoutProps),a),{components:t,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"In this guide, we will create our own remote web development environment using \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.linode.com/?r=b042b8d928111627044d292bdbca3691c536bf8d\"}),\"Linode\"),\".\"),mdx(\"h2\",e({},{id:\"pre-requisities\"}),\"Pre-requisities\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"A terminal with Bash or something similar. For Windows, you can use \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://www.microsoft.com/en-us/p/windows-terminal/9n0dx20hk701\"}),\"Windows Terminal\"),\" or \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://git-scm.com/downloads\"}),\"Git Bash\"),\". You can check \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://github.com/napjoseph/remote/blob/main/windows/terminal/settings.md\"}),\"my current settings for Windows Terminal\"),\".\"),mdx(\"li\",{parentName:\"ul\"},\"Your local SSH key pair. See \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://docs.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent\"}),\"GitHub's guide\"),\" for more details.\"),mdx(\"li\",{parentName:\"ul\"},\"A \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://github.com\"}),\"GitHub\"),\" account.\"),mdx(\"li\",{parentName:\"ul\"},\"A \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://keybase.io/\"}),\"Keybase\"),\" account for storing your GPG keys.\"),mdx(\"li\",{parentName:\"ul\"},\"A \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://www.linode.com/?r=b042b8d928111627044d292bdbca3691c536bf8d\"}),\"Linode account\"),\". You can go to their \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://www.linode.com/docs/guides/getting-started/\"}),\"docs\"),\" to get a $100 promo code (or you can directly use \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://www.linode.com/?r=b042b8d928111627044d292bdbca3691c536bf8d\"}),\"my referral code\"),\").\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",e({parentName:\"li\"},{href:\"https://code.visualstudio.com/\"}),\"Visual Studio Code\"),\".\")),mdx(\"h2\",e({},{id:\"generate-ssh-key-for-your-local-machine\"}),\"Generate SSH Key for your local machine\"),mdx(\"p\",null,\"Follow \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://docs.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent\"}),\"GitHub's guide\"),\" to generate your SSH key pair. For Windows users, you may need to check this \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://docs.microsoft.com/en-us/windows-server/administration/openssh/openssh_keymanagement\"}),\"guide from Microsoft\"),\" to enable SSH in your machine.\"),mdx(\"p\",null,\"Afterwards, add the key to your GitHub and Linode account.\"),mdx(\"h2\",e({},{id:\"generate-ssh-key-for-your-new-linode-instance\"}),\"Generate SSH Key for your new Linode instance\"),mdx(\"p\",null,\"Create a new SSH Key for your new Linode instance. Save this for now as we'll use this later.\"),mdx(\"h2\",e({},{id:\"generate-gpg-key\"}),\"Generate GPG Key\"),mdx(\"p\",null,\"Follow this \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/pstadler/keybase-gpg-github\"}),\"guide to generate a GPG key using Keybase\"),\".\"),mdx(\"blockquote\",null,mdx(\"p\",{parentName:\"blockquote\"},mdx(\"strong\",{parentName:\"p\"},\"NOTE\"),\": For Windows, if you already installed the Keybase app, you should have the CLI app will be ready to use (no need to install via brew).\")),mdx(\"p\",null,\"Again, you need to add this key to your GitHub account.\"),mdx(\"h2\",e({},{id:\"creating-your-server-instance-using-linodes-stackscripts\"}),\"Creating your server instance using Linode's StackScripts\"),mdx(\"ul\",e({},{className:\"contains-task-list\"}),mdx(\"li\",e({parentName:\"ul\"},{className:\"task-list-item\"}),mdx(\"input\",e({parentName:\"li\"},{type:\"checkbox\",checked:!1,disabled:!0})),\" \",\"Open the \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://cloud.linode.com/stackscripts/account\"}),\"StackScripts\"),\" page and click \",mdx(\"strong\",{parentName:\"li\"},\"Create StackScript\"),\".\"),mdx(\"li\",e({parentName:\"ul\"},{className:\"task-list-item\"}),mdx(\"input\",e({parentName:\"li\"},{type:\"checkbox\",checked:!1,disabled:!0})),\" \",\"Copy the contents of \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://github.com/napjoseph/remote/blob/main/linode/web.sh\"}),\"web.sh\"),\". This will only work on \",mdx(\"strong\",{parentName:\"li\"},\"Debian 10\"),\".\"),mdx(\"li\",e({parentName:\"ul\"},{className:\"task-list-item\"}),mdx(\"input\",e({parentName:\"li\"},{type:\"checkbox\",checked:!1,disabled:!0})),\" \",\"Click \",mdx(\"strong\",{parentName:\"li\"},\"Deploy New Linode\"),\".\"),mdx(\"li\",e({parentName:\"ul\"},{className:\"task-list-item\"}),mdx(\"input\",e({parentName:\"li\"},{type:\"checkbox\",checked:!1,disabled:!0})),\" \",\"Fill out the fields and then click \",mdx(\"strong\",{parentName:\"li\"},\"Create Linode\"),\".\"),mdx(\"li\",e({parentName:\"ul\"},{className:\"task-list-item\"}),mdx(\"input\",e({parentName:\"li\"},{type:\"checkbox\",checked:!1,disabled:!0})),\" \",\"Wait for your instance to be provisioned.\"),mdx(\"li\",e({parentName:\"ul\"},{className:\"task-list-item\"}),mdx(\"input\",e({parentName:\"li\"},{type:\"checkbox\",checked:!1,disabled:!0})),\" \",\"If all goes well, the status will change to \",mdx(\"strong\",{parentName:\"li\"},\"Running\"),\" and you can then connect to your instance.\")),mdx(\"p\",null,\"This should install the following on your instance:\"),mdx(\"ul\",e({},{className:\"contains-task-list\"}),mdx(\"li\",e({parentName:\"ul\"},{className:\"task-list-item\"}),mdx(\"input\",e({parentName:\"li\"},{type:\"checkbox\",checked:!0,disabled:!0})),\" \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://www.zsh.org/\"}),\"zsh\"),\", \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://ohmyz.sh/\"}),\"oh-my-zsh\"),\", \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://github.com/romkatv/powerlevel10k\"}),\"powerlevel10k\"),\", \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://github.com/zsh-users/zsh-autosuggestions\"}),\"zsh-autosuggestions\"),\", and \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://github.com/zsh-users/zsh-syntax-highlighting\"}),\"zsh-syntax-highlighting\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"task-list-item\"}),mdx(\"input\",e({parentName:\"li\"},{type:\"checkbox\",checked:!0,disabled:!0})),\" \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://keybase.io\"}),\"Keybase\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"task-list-item\"}),mdx(\"input\",e({parentName:\"li\"},{type:\"checkbox\",checked:!0,disabled:!0})),\" \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://golang.org/\"}),\"Go\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"task-list-item\"}),mdx(\"input\",e({parentName:\"li\"},{type:\"checkbox\",checked:!0,disabled:!0})),\" \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://github.com/nvm-sh/nvm\"}),\"Node Version Manager\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"task-list-item\"}),mdx(\"input\",e({parentName:\"li\"},{type:\"checkbox\",checked:!0,disabled:!0})),\" \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://github.com/pyenv/pyenv\"}),\"pyenv\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"task-list-item\"}),mdx(\"input\",e({parentName:\"li\"},{type:\"checkbox\",checked:!0,disabled:!0})),\" \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://www.docker.com/\"}),\"Docker\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"task-list-item\"}),mdx(\"input\",e({parentName:\"li\"},{type:\"checkbox\",checked:!0,disabled:!0})),\" \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://byobu.org\"}),\"byobu\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"task-list-item\"}),mdx(\"input\",e({parentName:\"li\"},{type:\"checkbox\",checked:!0,disabled:!0})),\" \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://spacevim.org\"}),\"spacevim\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"task-list-item\"}),mdx(\"input\",e({parentName:\"li\"},{type:\"checkbox\",checked:!0,disabled:!0})),\" \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://github.com/sharkdp/bat\"}),\"bat\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"task-list-item\"}),mdx(\"input\",e({parentName:\"li\"},{type:\"checkbox\",checked:!0,disabled:!0})),\" \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://github.com/direnv/direnv\"}),\"direnv\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"task-list-item\"}),mdx(\"input\",e({parentName:\"li\"},{type:\"checkbox\",checked:!0,disabled:!0})),\" \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://www.gnu.org/software/stow\"}),\"stow\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"task-list-item\"}),mdx(\"input\",e({parentName:\"li\"},{type:\"checkbox\",checked:!0,disabled:!0})),\" \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://brew.sh\"}),\"Homebrew\"))),mdx(\"h2\",e({},{id:\"connecting-via-ssh\"}),\"Connecting via SSH\"),mdx(\"p\",null,\"Start the ssh-agent in the background:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell\",metastring:\"note=for%20linux/osx:\",note:\"for%20linux/osx:\"}),\"$ eval `ssh-agent -s`\\n> Agent pid 59566\\n\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-powershell\",metastring:\"note=for%20windows:\",note:\"for%20windows:\"}),`Start-Service ssh-agent\n`)),mdx(\"p\",null,\"Add your SSH private key to the ssh-agent. If you created your key with a different name, or if you are adding an existing key that has a different name, replace id_ed25519 in the command with the name of your private key file.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell\"}),`ssh-add ~/.ssh/id_ed25519\n`)),mdx(\"p\",null,\"Then connect via SSH:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell\"}),`ssh <NON_ROOT_USERNAME>@<LINODE_IPV4_ADDRESS> -p <SSH_PORT>\n`)),mdx(\"p\",null,\"Alternatively, you can create a config file to make it easier to connect to your remote host.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-text\",metastring:\"filename=~/.ssh/config\",filename:\"~/.ssh/config\"}),`Host <ALIAS>\n  User <NON_ROOT_USERNAME>\n  HostName <LINODE_IPV4_ADDRESS>\n  Port <SSH_PORT>\n  IdentityFile <PRIVATE_KEY_FILE_LOCATION>\n`)),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell\"}),`ssh <ALIAS>\n`)),mdx(\"p\",null,\"Congratulations! You can now connect to your remote server instance.\"),mdx(\"blockquote\",null,mdx(\"p\",{parentName:\"blockquote\"},mdx(\"strong\",{parentName:\"p\"},\"NOTE\"),\": You can already connect via SSH even if the StackScript has not yet been completed. To check its status, you can check the logs using \",mdx(\"inlineCode\",{parentName:\"p\"},\"cat /var/log/stackscript.log\"),\".\")),mdx(\"h2\",e({},{id:\"additional-setup\"}),\"Additional setup\"),mdx(\"p\",null,\"The essentials are already installed in your instance. However, we need to configure a few applications we will use.\"),mdx(\"h3\",e({},{id:\"configuring-your-zsh-theme\"}),\"Configuring your zsh theme\"),mdx(\"blockquote\",null,mdx(\"p\",{parentName:\"blockquote\"},mdx(\"strong\",{parentName:\"p\"},\"IMPORTANT\"),\": You also need to install the \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/romkatv/powerlevel10k#meslo-nerd-font-patched-for-powerlevel10k\"}),\"recommended fonts\"),\" for the theme to display properly.\")),mdx(\"blockquote\",null,mdx(\"p\",{parentName:\"blockquote\"},mdx(\"strong\",{parentName:\"p\"},\"IMPORTANT\"),\": If you are using Windows, you can use \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://microsoft.com/en-us/p/windows-terminal/9n0dx20hk701\"}),\"Windows Terminal\"),\". You can check \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/napjoseph/remote/blob/main/windows/terminal/settings.md\"}),\"my current settings for Windows Terminal\"),\".\")),mdx(\"p\",null,\"If you enabled \",mdx(\"inlineCode\",{parentName:\"p\"},\"UPGRADE_SHELL_EXPERIENCE\"),\", \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.zsh.org/\"}),\"zsh\"),\", \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://ohmyz.sh/\"}),\"oh-my-zsh\"),\", and the \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/romkatv/powerlevel10k\"}),\"powerlevel10k zsh theme\"),\" will be installed.\"),mdx(\"p\",null,\"On your first login via SSH, it will ask you to configure your theme. To run the wizard again, you can run:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell\"}),`p10k configure\n`)),mdx(\"h3\",e({},{id:\"fixing-your-ssh-private-key\"}),\"Fixing your SSH Private Key\"),mdx(\"p\",null,\"Due to StackScripts not yet having a multiple-line UDF, the line breaks for our private key was removed.\"),mdx(\"p\",null,\"Update the \",mdx(\"inlineCode\",{parentName:\"p\"},\".ssh/$HOSTNAME\"),\" with the correct version.\"),mdx(\"h3\",e({},{id:\"configure-keybase\"}),\"Configure Keybase\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell\"}),`# login\nkeybase login\n\n# check if you have more than one key saved\nkeybase pgp export\n\n# if yes, specify the id in the commands below\n# keybase pgp export -q 31DBBB1F6949DA68 | gpg --import\n\n# import public key\nkeybase pgp export | gpg --import\n\n# import private key\nkeybase pgp export --secret | gpg --allow-secret-key-import --import\n\n# check imported key\ngpg --list-secret-keys --keyid-format LONG\n# /Users/pstadler/.gnupg/secring.gpg\n# ----------------------------------\n# pub   2048R/DEADBEEF 2012-08-16\n# uid                  Name (Comment) <email@host.tld>\n# sub   2048R/86D2FAC6 2012-08-16\n`)),mdx(\"p\",null,\"Notice the hash \",mdx(\"inlineCode\",{parentName:\"p\"},\"DEADBEEF\"),\". We will use this in the next section.\"),mdx(\"h3\",e({},{id:\"configure-git\"}),\"Configure Git\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell\"}),`# add your basic information\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your_name@example.com\"\n\n# sign all commits using your GPG key\ngit config --global user.signingkey DEADBEEF\ngit config --global commit.gpgsign true\n`)),mdx(\"h2\",e({},{id:\"repository\"}),\"Repository\"),mdx(\"p\",null,\"You can check the \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/napjoseph/remote/\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"napjoseph/remote\"),\" repository\"),\" for the updated code.\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}},{"title":"Using Hugo on Gitpod","layout":"posts","slug":"using-hugo-on-gitpod","draft":false,"frontMatter":{"title":"Using Hugo on Gitpod","publishedDate":"2020-07-31T13:15:13Z","tags":["Hugo","Gitpod"],"description":"","disableComments":false},"rawContent":"\nCreate the necessary [Gitpod](https://www.gitpod.io/) files on the root of your repository.\n\n```bash\n$ touch .gitpod.Dockerfile\n$ touch .gitpod.yml\n```\n\n```dockerfile filename=.gitpod.Dockerfile\nFROM gitpod/workspace-full\n\nUSER root\n\nRUN apt-get update && apt-get install -yq hugo\n```\n\n```yaml filename=.gitpod.yml\nimage:\n  file: .gitpod.Dockerfile\n\ntasks:\n  - command: 'hugo server --baseUrl $(gp url 1313) --appendPort=false'\n\nports:\n  - port: 1313\n    onOpen: open-preview\n```\n\nAfter commiting and merging your code, you can then go to `https://gitpod.io/#https://github.com/<YOUR_USERNAME>/<YOUR_REPO_NAME>` to start your Gitpod workspace.\n\nOptionally, you can also add a Gitpod badge on your `README` file:\n\n```markdown filename=README.md\n[![Gitpod ready-to-code](https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod)](https://gitpod.io/#https://github.com/<YOUR_USERNAME>/<YOUR_REPO_NAME>)\n```\n\n#### Sources\n\nSetup configuration was copied from [esttech/theia-dev-conf](https://github.com/esttech/theia-dev-conf/).\n","excerpt":"\nCreate the necessary [Gitpod](https://www.gitpod.io/) files on the root of your repository.\n\n```bash\n$ touch .gitpod.Dockerfile\n$ touch .gitpod.yml\n```\n\n```dockerfile filename=.gitpod.Dockerfile\nFROM gitpod/workspace-full\n\nUSER root\n\nRUN apt-get update && apt-get install -yq hugo\n```\n\n```yaml filen...","serializedContent":{"compiledSource":"var l=Object.defineProperty,m=Object.defineProperties;var g=Object.getOwnPropertyDescriptors;var i=Object.getOwnPropertySymbols;var r=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable;var d=(e,o,t)=>o in e?l(e,o,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[o]=t,p=(e,o)=>{for(var t in o||(o={}))r.call(o,t)&&d(e,t,o[t]);if(i)for(var t of i(o))n.call(o,t)&&d(e,t,o[t]);return e},s=(e,o)=>m(e,g(o));var c=(e,o)=>{var t={};for(var a in e)r.call(e,a)&&o.indexOf(a)<0&&(t[a]=e[a]);if(e!=null&&i)for(var a of i(e))o.indexOf(a)<0&&n.call(e,a)&&(t[a]=e[a]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var a=t,{components:e}=a,o=c(a,[\"components\"]);return mdx(MDXLayout,s(p(p({},layoutProps),o),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"Create the necessary \",mdx(\"a\",p({parentName:\"p\"},{href:\"https://www.gitpod.io/\"}),\"Gitpod\"),\" files on the root of your repository.\"),mdx(\"pre\",null,mdx(\"code\",p({parentName:\"pre\"},{className:\"language-bash\"}),`$ touch .gitpod.Dockerfile\n$ touch .gitpod.yml\n`)),mdx(\"pre\",null,mdx(\"code\",p({parentName:\"pre\"},{className:\"language-dockerfile\",metastring:\"filename=.gitpod.Dockerfile\",filename:\".gitpod.Dockerfile\"}),`FROM gitpod/workspace-full\n\nUSER root\n\nRUN apt-get update && apt-get install -yq hugo\n`)),mdx(\"pre\",null,mdx(\"code\",p({parentName:\"pre\"},{className:\"language-yaml\",metastring:\"filename=.gitpod.yml\",filename:\".gitpod.yml\"}),`image:\n  file: .gitpod.Dockerfile\n\ntasks:\n  - command: 'hugo server --baseUrl $(gp url 1313) --appendPort=false'\n\nports:\n  - port: 1313\n    onOpen: open-preview\n`)),mdx(\"p\",null,\"After commiting and merging your code, you can then go to \",mdx(\"inlineCode\",{parentName:\"p\"},\"https://gitpod.io/#https://github.com/<YOUR_USERNAME>/<YOUR_REPO_NAME>\"),\" to start your Gitpod workspace.\"),mdx(\"p\",null,\"Optionally, you can also add a Gitpod badge on your \",mdx(\"inlineCode\",{parentName:\"p\"},\"README\"),\" file:\"),mdx(\"pre\",null,mdx(\"code\",p({parentName:\"pre\"},{className:\"language-markdown\",metastring:\"filename=README.md\",filename:\"README.md\"}),`[![Gitpod ready-to-code](https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod)](https://gitpod.io/#https://github.com/<YOUR_USERNAME>/<YOUR_REPO_NAME>)\n`)),mdx(\"h4\",p({},{id:\"sources\"}),\"Sources\"),mdx(\"p\",null,\"Setup configuration was copied from \",mdx(\"a\",p({parentName:\"p\"},{href:\"https://github.com/esttech/theia-dev-conf/\"}),\"esttech/theia-dev-conf\"),\".\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}},{"title":"Deploy Hugo Site Using GitHub Actions","layout":"posts","slug":"deploy-hugo-site-using-github-actions","draft":false,"frontMatter":{"title":"Deploy Hugo Site Using GitHub Actions","publishedDate":"2020-06-28T03:02:37+08:00","tags":["Hugo","GitHub Actions"],"description":"","disableComments":false},"rawContent":"\nAfter creating a new project using\n[Hugo's Quick Start guide](https://gohugo.io/getting-started/quick-start/), you\ncan then deploy to [GitHub Pages](https://pages.github.com/).\n\n### Git Branches\n\nFor this site, we are deploying the project hosted at\n[napjoseph/napjoseph.github.io](https://github.com/napjoseph/napjoseph.github.io/).\n\nSince this is an\n[Organization Pages-type repository](https://docs.github.com/en/github/working-with-github-pages/about-github-pages#types-of-github-pages-sites),\nwe will be using following branches for our workflow:\n\n```bash\n$ git branch\nmaster           # the branch that GitHub pages will serve the files from\nstable           # the main development branch where all pull requests will be merged to\nid_your_feature  # additional development branches for new features\n```\n\n### Add your Deploy Key\n\nFollow the tutorial over at\n[peaceiris/actions-gh-pages](https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-create-ssh-deploy-key)\nand add an SSH deploy key for your project.\n\n### Create your GitHub Action\n\nAfterwards, create a directory for your workflows and add the config file for\nyour new action.\n\n```bash\n$ mkdir -p .github/workflows\n$ touch .github/workflows/deploy.yml\n```\n\n```yaml filename=.github/workflows/deploy.yml\nname: deploy-to-master\n\non:\n  push:\n    branches:\n      - stable\n\njobs:\n  build-and-deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2\n        with:\n          persist-credentials: false\n\n      - name: Update theme\n        run: git submodule update --init --recursive\n\n      - name: Setup Hugo\n        uses: peaceiris/actions-hugo@v2\n        with:\n          hugo-version: '0.74.3'\n\n      - name: Build\n        run: HUGO_ENV=production hugo --minify\n\n      - name: Deploy\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}\n          publish_dir: ./public\n          publish_branch: master\n          keep_files: false\n          allow_empty_commit: true\n```\n\n### Deployment\n\nAfter merging your pull requests to the `stable` branch, it should automatically\ndeploy to the `master` branch.\n","excerpt":"\nAfter creating a new project using\n[Hugo's Quick Start guide](https://gohugo.io/getting-started/quick-start/), you\ncan then deploy to [GitHub Pages](https://pages.github.com/).\n\n### Git Branches\n\nFor this site, we are deploying the project hosted at\n[napjoseph/napjoseph.github.io](https://github.co...","serializedContent":{"compiledSource":"var l=Object.defineProperty,c=Object.defineProperties;var d=Object.getOwnPropertyDescriptors;var i=Object.getOwnPropertySymbols;var s=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var n=(e,t,a)=>t in e?l(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,o=(e,t)=>{for(var a in t||(t={}))s.call(t,a)&&n(e,a,t[a]);if(i)for(var a of i(t))p.call(t,a)&&n(e,a,t[a]);return e},u=(e,t)=>c(e,d(t));var h=(e,t)=>{var a={};for(var r in e)s.call(e,r)&&t.indexOf(r)<0&&(a[r]=e[r]);if(e!=null&&i)for(var r of i(e))t.indexOf(r)<0&&p.call(e,r)&&(a[r]=e[r]);return a};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(a){var r=a,{components:e}=r,t=h(r,[\"components\"]);return mdx(MDXLayout,u(o(o({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,`After creating a new project using\n`,mdx(\"a\",o({parentName:\"p\"},{href:\"https://gohugo.io/getting-started/quick-start/\"}),\"Hugo's Quick Start guide\"),`, you\ncan then deploy to `,mdx(\"a\",o({parentName:\"p\"},{href:\"https://pages.github.com/\"}),\"GitHub Pages\"),\".\"),mdx(\"h3\",o({},{id:\"git-branches\"}),\"Git Branches\"),mdx(\"p\",null,`For this site, we are deploying the project hosted at\n`,mdx(\"a\",o({parentName:\"p\"},{href:\"https://github.com/napjoseph/napjoseph.github.io/\"}),\"napjoseph/napjoseph.github.io\"),\".\"),mdx(\"p\",null,`Since this is an\n`,mdx(\"a\",o({parentName:\"p\"},{href:\"https://docs.github.com/en/github/working-with-github-pages/about-github-pages#types-of-github-pages-sites\"}),\"Organization Pages-type repository\"),`,\nwe will be using following branches for our workflow:`),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-bash\"}),`$ git branch\nmaster           # the branch that GitHub pages will serve the files from\nstable           # the main development branch where all pull requests will be merged to\nid_your_feature  # additional development branches for new features\n`)),mdx(\"h3\",o({},{id:\"add-your-deploy-key\"}),\"Add your Deploy Key\"),mdx(\"p\",null,`Follow the tutorial over at\n`,mdx(\"a\",o({parentName:\"p\"},{href:\"https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-create-ssh-deploy-key\"}),\"peaceiris/actions-gh-pages\"),`\nand add an SSH deploy key for your project.`),mdx(\"h3\",o({},{id:\"create-your-github-action\"}),\"Create your GitHub Action\"),mdx(\"p\",null,`Afterwards, create a directory for your workflows and add the config file for\nyour new action.`),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-bash\"}),`$ mkdir -p .github/workflows\n$ touch .github/workflows/deploy.yml\n`)),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-yaml\",metastring:\"filename=.github/workflows/deploy.yml\",filename:\".github/workflows/deploy.yml\"}),`name: deploy-to-master\n\non:\n  push:\n    branches:\n      - stable\n\njobs:\n  build-and-deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2\n        with:\n          persist-credentials: false\n\n      - name: Update theme\n        run: git submodule update --init --recursive\n\n      - name: Setup Hugo\n        uses: peaceiris/actions-hugo@v2\n        with:\n          hugo-version: '0.74.3'\n\n      - name: Build\n        run: HUGO_ENV=production hugo --minify\n\n      - name: Deploy\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          deploy_key: \\${{ secrets.ACTIONS_DEPLOY_KEY }}\n          publish_dir: ./public\n          publish_branch: master\n          keep_files: false\n          allow_empty_commit: true\n`)),mdx(\"h3\",o({},{id:\"deployment\"}),\"Deployment\"),mdx(\"p\",null,\"After merging your pull requests to the \",mdx(\"inlineCode\",{parentName:\"p\"},\"stable\"),` branch, it should automatically\ndeploy to the `,mdx(\"inlineCode\",{parentName:\"p\"},\"master\"),\" branch.\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}}]},"__N_SSG":true}